// automatically generated by the FlatBuffers compiler, do not modify

package articles

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Content struct {
	_tab flatbuffers.Table
}

func GetRootAsContent(buf []byte, offset flatbuffers.UOffsetT) *Content {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Content{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *Content) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Content) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *Content) Type() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func ContentStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func ContentAddType(builder *flatbuffers.Builder, type_ flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(type_), 0)
}
func ContentEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
